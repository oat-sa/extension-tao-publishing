{"version":3,"mappings":"AAoBAA,gHAEA,OACAC,yBACA,iEACA,iCACA,CACA,CACA,GC3BAD,uKAMA,MALA,kCACAE,6DAIA,sCACA,KCYAF,wDACA,SACA,OACA,qBACA,WACA,sCACA,+DACA,uEACA,aAMA,4BACA,iEACAG,2BACAA,oBAEAA,yCACAC,qHACAC,2BACAF,mBACA,CAEA,OACAG,uBAiBA,uCACAC,QACAC,sDAEAA,+CAEA,CAMA,+BACAC,8CACAC,uEAGAC,sBACAA,0BAGAC,0CACAA,6CACA,IAvCAC,+BACAC,2HACAC,iBACAC,UAEAF,eACAE,QACAC,eACA,GAiCAC,mBACAC,qCACAC,oBAEAP,sBAGAA,uCACAQ,uBACAC,6BACA,oBACA,sEACA,mBACAJ,iBACA,EACA,CACA,CACA,GCvFAlB,oEACA,SACA,OACA,iBACA,cACA,yBACA,qBACA,UACAI,EACAmB,GACAC,cACAC,SACAC,UACAR,WACA,CACA,kBAMAS,+CACAH,iCACAP,eACA,EACA,EAEAW,8CACAC,4BACAC,8EACAC,kBACA,uBACA,qEACAR,qCAEAS,6CACAF,mDACA,GAEAE,4BACA5B,8FACA,CACA,EAEA6B,wDACAC,qCACAL,2BACAM,iDAEAN,8BA8BA,MA7BAO,oBAEAlB,mBACAQ,wBACAA,UACAW,oDACAjB,2BACAkB,2CACAC,0FAEAd,eACAe,cACAC,kBACA,iBAGAf,sBACAC,+CACAT,iBACA,uBAEAQ,oBACAR,kBAEAO,8BAEAU,0BACA,KAGA,GACAD,iCACA,EAEA,OACA5B,uBACAsB,iBACAK,qBACA,CACA,CACA,GC1FAjC,yKACAI,EACAmB,GACAmB,YACAC,yBACA,CACA,aAEA,OACArC,4BACAsC,8CACAC,oDAEAA,WACAH,YACAnB,GACA,8NACAnB,gCACA,CACA,CAEAuC,gCAEA,CACA,CACA,GAEA3C,MC7CA,iDACA,OACA,eACA,oBACA,SACA,kDACA,8CACA,CACA,EACA,SACA,SACA,uEACA,wEACA,CACA,CACA,CACA,GCfAA","names":["define","getHtml","helpers","$propertyContainer","$","before","start","enabled","$fields","$allForms","$selectedForm","hider","toggleFields","$container","$elId","siblings","params","uri","loadingBar","authSelectorProvider","then","each","on","__","actionManager","feedback","taskQueue","refreshTree","initCheckboxes","$form","$checkboxes","$ul","$checkAll","redeclarePublishBtn","$publishBtn","$treePublishButton","e","create","tasksCount","message","encodeHtml","timeout","alertDialog","selectRemoteEnvironments","uriResource","exceedFlag"],"sources":["../provider/authSelector.js","../controller/PlatformAdmin/tpl/authContainer!tpl","../controller/PlatformAdmin/editor.js","../controller/Publish/selectRemoteEnvironments.js","../controller/Publish/classRemotePublishing.js","../controller/routes.js","module-create.js"],"sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018  (original work) Open Assessment Technologies SA;\n *\n * @author Alexander Zagovorichev <olexander.zagovorychev@1pt.com>\n */\n\ndefine('taoPublishing/provider/authSelector',['util/url', 'core/dataProvider/request'], function (urlUtil, request) {\n\n    return {\n        getHtml: function (params) {\n            var url = urlUtil.route('authTpl', 'PlatformAdmin', 'taoPublishing');\n            return request(url, params, 'POST');\n        }\n    };\n});\n\n","\ndefine('tpl!taoPublishing/controller/PlatformAdmin/tpl/authContainer', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"auth-container\\\"></div>\";\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018  (original work) Open Assessment Technologies SA;\n *\n * @author Alexander Zagovorichev <olexander.zagovorychev@1pt.com>\n */\n\ndefine('taoPublishing/controller/PlatformAdmin/editor',[\n    'jquery',\n    'i18n',\n    'layout/loading-bar',\n    'ui/hider',\n    'taoPublishing/provider/authSelector',\n    'tpl!taoPublishing/controller/PlatformAdmin/tpl/authContainer'\n], function ($, __, loadingBar, hider, authSelectorProvider, authContainerTpl) {\n    'use strict';\n\n    /**\n     * Get or create element for authorization form\n     * @returns {*|jQuery|HTMLElement}\n     */\n    function getAuthContainer() {\n        var $propertyContainer  = $('.content-block .auth-container');\n        if($propertyContainer.length) {\n            return $propertyContainer;\n        }\n        $propertyContainer  = $(authContainerTpl());\n        $('.content-block input[name=\"classUri\"][value=\"http_2_www_0_tao_0_lu_1_Ontologies_1_TAO_0_rdf_3_TaoPlatform\"]')\n            .before($propertyContainer);\n        return $propertyContainer;\n    }\n\n    return {\n        start: function start() {\n            var $container = getAuthContainer();\n            var $elId = $('.content-block input[name=\"classUri\"][value=\"http_2_www_0_tao_0_lu_1_Ontologies_1_TAO_0_rdf_3_TaoPlatform\"]')\n                .siblings('#uri');\n            var params = {};\n\n            if($elId.length) {\n                params = {\n                    uri: $elId.val()\n                };\n            }\n\n            /**\n             * Enable/disable fields\n             * @param {jQuery} $fields - selection of fields\n             * @param {Boolean} enabled - enable or disable the fields\n             */\n            function toggleFields($fields, enabled) {\n                if (enabled) {\n                    $fields.removeAttr('disabled').removeProp('disabled');\n                } else {\n                    $fields.attr('disabled', true).prop('disabled', true);\n                }\n            }\n\n            /**\n             * Display the auth form part that complies to the selected auth method.\n             * Will be applied on the auth method selection combo box.\n             */\n            function showAuthFormPart() {\n                var $allForms = $container.find('.auth-form-part');\n                var $selectedForm = $container.find('[data-auth-method=\"' + this.value + '\"]');\n\n                // switch form visibility\n                hider.hide($allForms);\n                hider.show($selectedForm);\n\n                // switch sendable fields\n                toggleFields($allForms.find(':input'), false);\n                toggleFields($selectedForm.find(':input'), true);\n            }\n\n            loadingBar.start();\n            authSelectorProvider.getHtml(params)\n                .then(function (html) {\n                    // show the form, will all auth methods\n                    $container.html(html);\n\n                    // display the form parts according to the selected auth method\n                    $container.find('.auth-type-selector')\n                        .each(showAuthFormPart)\n                        .on('change', showAuthFormPart);\n                }).catch(function() {\n                    throw new Error( __('Publishing auth configuration can not be loaded'));\n                }).then(function () {\n                    loadingBar.stop();\n                });\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2020  (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoPublishing/controller/Publish/selectRemoteEnvironments',[\n    'jquery',\n    'i18n',\n    'layout/actions',\n    'ui/feedback',\n    'ui/taskQueue/taskQueue',\n    'layout/loading-bar'\n], function (\n    $,\n    __,\n    actionManager,\n    feedback,\n    taskQueue,\n    loadingBar\n) {\n    'use strict';\n\n    /**\n     * wrapped the old jstree API used to refresh the tree and optionally select a resource\n     * @param {String} [uriResource] - the uri resource node to be selected\n     */\n    const refreshTree = function refreshTree(uriResource) {\n        actionManager.trigger('refresh', {\n            uri: uriResource\n        });\n    };\n\n    const initCheckboxes = function initCheckboxes() {\n        const $form = $('#publish-remote');\n        const $checkboxes = $('input[name=\"remote-environments[]\"]', $form).not(':disabled');\n        const $ul = $('ul', $form);\n        if ($checkboxes.length) {\n            const $checkAll = $('<input type=\"checkbox\" id=\"all-env\" title=\"'\n                + __('All active environments') + '\">');\n\n            $checkAll.off('click').on('click', function (){\n                $checkboxes.prop('checked', $(this).prop('checked'));\n            });\n\n            $checkAll.insertBefore($ul);\n            $('<label for=\"all-env\"><b>' + __('All active environments') + '</b></label>').insertBefore($ul);\n        }\n    };\n\n    const redeclarePublishBtn = function redeclarePublishBtn() {\n        const $publishBtn = $('#publish-to-remote');\n        const $form = $('#publish-remote');\n        const $treePublishButton = $('#delivery-remote-publish');\n\n        $form.on('submit', function (e) {\n            e.preventDefault();\n\n            loadingBar.start();\n            taskQueue.pollAllStop();\n            taskQueue\n                .create($form.prop('action'), $form.serializeArray())\n                .then(function(result) {\n                    const tasksCount = result['extra']['allTasks'].length + 1;\n                    const message = __('<strong> %s </strong> task(s) have been moved to the background.', tasksCount);\n\n                    feedback(null, {\n                        encodeHtml: false,\n                        timeout: { info: 8000 }\n                    }).info(message);\n\n                    // updating tasks in the background tasks\n                    taskQueue.pollAll(true);\n                    refreshTree($('#selected-delivery-uri').val());\n                    loadingBar.stop();\n                }).catch(function(err) {\n                //in case of error display it and continue task queue activity\n                taskQueue.pollAll();\n                loadingBar.stop();\n                //format and display error message to user\n                feedback().error(err.message);\n                // refreshTree();\n                $treePublishButton.click();\n            });\n\n            return false;\n        });\n        $publishBtn.removeClass('hidden');\n    };\n\n    return {\n        start: function start() {\n            initCheckboxes();\n            redeclarePublishBtn();\n        }\n    }\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2020  (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoPublishing/controller/Publish/classRemotePublishing',['jquery', 'i18n', 'ui/dialog/alert', 'taoPublishing/controller/Publish/selectRemoteEnvironments'], function (\n    $,\n    __,\n    alertDialog,\n    selectRemoteEnvironments\n) {\n    'use strict';\n\n    return {\n        start: function start() {\n            const uriResource = $('#selected-subject-uri').val();\n            const exceedFlag = $('#class-content-exceeded').val() === '1';\n\n            if (exceedFlag) {\n                alertDialog(\n                    __(\n                        \"The class can't be published.<br/><br/>The selected class contains too many deliveries allowed for a single remote publication (maximum %s).<br/>Please reorganize the deliveries or publish a class with fewer deliveries.\",\n                        $('#class-content-limit').val()\n                    )\n                );\n            } else {\n                selectRemoteEnvironments.start();\n            }\n        }\n    };\n});\n\n","define('taoPublishing/controller/routes',[],function(){\n    return {\n        'PlatformAdmin': {\n            'css': 'auth-selector',\n            'actions': {\n                'addInstanceForm': 'controller/PlatformAdmin/editor',\n                'editInstance': 'controller/PlatformAdmin/editor'\n            }\n        },\n        'Publish': {\n            'actions': {\n                'selectRemoteEnvironments': 'controller/Publish/selectRemoteEnvironments',\n                'selectClassRemoteEnvironments': 'controller/Publish/classRemotePublishing',\n            }\n        }\n    };\n});\n\n","\ndefine(\"taoPublishing/loader/taoPublishing.bundle\", function(){});\n"]}