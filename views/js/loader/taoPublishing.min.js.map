{"version":3,"sources":["../provider/authSelector.js","../controller/PlatformAdmin/tpl/authContainer!tpl","../controller/PlatformAdmin/editor.js","../controller/Publish/selectRemoteEnvironments.js","../controller/routes.js","module-create.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018  (original work) Open Assessment Technologies SA;\n *\n * @author Alexander Zagovorichev <olexander.zagovorychev@1pt.com>\n */\n\ndefine('taoPublishing/provider/authSelector',['util/url', 'core/dataProvider/request'], function (urlUtil, request) {\n\n    return {\n        getHtml: function (params) {\n            var url = urlUtil.route('authTpl', 'PlatformAdmin', 'taoPublishing');\n            return request(url, params, 'POST');\n        }\n    };\n});\n\n","\ndefine('tpl!taoPublishing/controller/PlatformAdmin/tpl/authContainer', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"auth-container\\\"></div>\";\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018  (original work) Open Assessment Technologies SA;\n *\n * @author Alexander Zagovorichev <olexander.zagovorychev@1pt.com>\n */\n\ndefine('taoPublishing/controller/PlatformAdmin/editor',[\n    'jquery',\n    'i18n',\n    'layout/loading-bar',\n    'ui/hider',\n    'taoPublishing/provider/authSelector',\n    'tpl!taoPublishing/controller/PlatformAdmin/tpl/authContainer'\n], function ($, __, loadingBar, hider, authSelectorProvider, authContainerTpl) {\n    'use strict';\n\n    /**\n     * Get or create element for authorization form\n     * @returns {*|jQuery|HTMLElement}\n     */\n    function getAuthContainer() {\n        var $propertyContainer  = $('.content-block .auth-container');\n        if($propertyContainer.length) {\n            return $propertyContainer;\n        }\n        $propertyContainer  = $(authContainerTpl());\n        $('.content-block .form-toolbar').before($propertyContainer);\n        return $propertyContainer;\n    }\n\n    return {\n        start: function start() {\n            var $container = getAuthContainer();\n            var $elId = $('#id');\n            var params = {};\n\n            if($elId.length) {\n                params = {\n                    uri: $elId.val()\n                };\n            }\n\n            /**\n             * Enable/disable fields\n             * @param {jQuery} $fields - selection of fields\n             * @param {Boolean} enabled - enable or disable the fields\n             */\n            function toggleFields($fields, enabled) {\n                if (enabled) {\n                    $fields.removeAttr('disabled').removeProp('disabled');\n                } else {\n                    $fields.attr('disabled', true).prop('disabled', true);\n                }\n            }\n\n            /**\n             * Display the auth form part that complies to the selected auth method.\n             * Will be applied on the auth method selection combo box.\n             */\n            function showAuthFormPart() {\n                var $allForms = $container.find('.auth-form-part');\n                var $selectedForm = $container.find('[data-auth-method=\"' + this.value + '\"]');\n\n                // switch form visibility\n                hider.hide($allForms);\n                hider.show($selectedForm);\n\n                // switch sendable fields\n                toggleFields($allForms.find(':input'), false);\n                toggleFields($selectedForm.find(':input'), true);\n            }\n\n            loadingBar.start();\n            authSelectorProvider.getHtml(params)\n                .then(function (html) {\n                    // show the form, will all auth methods\n                    $container.html(html);\n\n                    // display the form parts according to the selected auth method\n                    $container.find('.auth-type-selector')\n                        .each(showAuthFormPart)\n                        .on('change', showAuthFormPart);\n                }).catch(function() {\n                    throw new Error( __('Publishing auth configuration can not be loaded'));\n                }).then(function () {\n                    loadingBar.stop();\n                });\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2020  (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoPublishing/controller/Publish/selectRemoteEnvironments',[\n    'jquery',\n    'i18n',\n    'layout/actions',\n    'ui/feedback',\n    'ui/taskQueue/taskQueue',\n    'layout/loading-bar'\n], function (\n    $,\n    __,\n    actionManager,\n    feedback,\n    taskQueue,\n    loadingBar\n) {\n    'use strict';\n\n    /**\n     * wrapped the old jstree API used to refresh the tree and optionally select a resource\n     * @param {String} [uriResource] - the uri resource node to be selected\n     */\n    const refreshTree = function refreshTree(uriResource) {\n        actionManager.trigger('refresh', {\n            uri: uriResource\n        });\n    };\n\n    const initCheckboxes = function initCheckboxes() {\n        const $form = $('#publish-remote');\n        const $checkboxes = $('input[name=\"remote-environments[]\"]', $form).not(':disabled');\n        const $ul = $('ul', $form);\n        if ($checkboxes.length) {\n            const $checkAll = $('<input type=\"checkbox\" id=\"all-env\" title=\"'\n                + __('All active environments') + '\">');\n\n            $checkAll.off('click').on('click', function (){\n                $checkboxes.prop('checked', $(this).prop('checked'));\n            });\n\n            $checkAll.insertBefore($ul);\n            $('<label for=\"all-env\"><b>' + __('All active environments') + '</b></label>').insertBefore($ul);\n        }\n    };\n\n    const redeclarePublishBtn = function redeclarePublishBtn() {\n        const $publishBtn = $('#publish-to-remote');\n        const $form = $('#publish-remote');\n        const $treePublishButton = $('#delivery-remote-publish');\n\n        $form.on('submit', function (e) {\n            e.preventDefault();\n\n            loadingBar.start();\n            taskQueue.pollAllStop();\n            taskQueue\n                .create($form.prop('action'), $form.serializeArray())\n                .then(function(result) {\n                    const tasksCount = result['extra']['allTasks'].length + 1;\n                    const message = __('<strong> %s </strong> task(s) have been moved to the background.', tasksCount);\n\n                    feedback(null, {\n                        encodeHtml: false,\n                        timeout: { info: 8000 }\n                    }).info(message);\n\n                    // updating tasks in the background tasks\n                    taskQueue.pollAll(true);\n                    refreshTree($('#selected-delivery-uri').val());\n                    loadingBar.stop();\n                }).catch(function(err) {\n                //in case of error display it and continue task queue activity\n                taskQueue.pollAll();\n                loadingBar.stop();\n                //format and display error message to user\n                feedback().error(err.message);\n                // refreshTree();\n                $treePublishButton.click();\n            });\n\n            return false;\n        });\n        $publishBtn.removeClass('hidden');\n    };\n\n    return {\n        start: function start() {\n            initCheckboxes();\n            redeclarePublishBtn();\n        }\n    }\n});\n\n","define('taoPublishing/controller/routes',[],function(){\n    return {\n        'PlatformAdmin': {\n            'css': 'auth-selector',\n            'actions': {\n                'addInstanceForm': 'controller/PlatformAdmin/editor',\n                'editInstance': 'controller/PlatformAdmin/editor'\n            }\n        },\n        'Publish': {\n            'actions': {\n                'selectRemoteEnvironments': 'controller/Publish/selectRemoteEnvironments',\n            }\n        }\n    };\n});\n\n","\ndefine(\"taoPublishing/loader/taoPublishing.bundle\", function(){});\n"]}